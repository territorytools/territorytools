# server {
#      server_name tt-web tt-mob;
#      listen 80;
#      location / {
# 	return     405;
#      }
# } 
    
    # This might be better way to set upstream services...
    # upstream host_service {
    #    server host.docker.internal:5123;
    # }

server {
    listen 7000 default_server;
    listen [::]:7000 default_server;
    server_name localhost tt-app;
    # server_name _;
    # error_log   /var/log/nginx/error.log;
    # access_log  /var/log/nginx/tt-access.log;
    
    # WASM (Rust App) Section

    ## Uncomment this location block to debug WASM from rust container
    ## Also from the container run: trunk serve --port 2288 --public-url "/app/"
    location /app {
        proxy_pass          http://localhost:2289;
    }
 
    # rewrite ^/(wasm|app|key|k)/(.*)$ /app/tt-spa-slot-b/wasm/$2  last; # tt-spa-slot-b

    # location /app/tt-spa-slot-a/wasm {
    #   proxy_pass          http://localhost:8007;
    # }

    # location /app/tt-spa-slot-b/wasm {
    #   proxy_pass          http://localhost:8007;
    # }

     # Mobile (JavaScript App) Section
     rewrite ^/(mtk|alba)/(.*)$ /mobile$1/$2 last;
     rewrite ^/(Mobile|mobile|TerritoryClosed|TerritoryLinkExpired)(.*)$ /mobile$1$2 last;
     location /mobile {
         proxy_pass          http://localhost:5621/; # tt-mob
         proxy_set_header    Host                $http_host;
         proxy_set_header    X-Real-IP           $remote_addr;
         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
         proxy_set_header    X-Forwarded-Host    $host;
         proxy_set_header    X-Forwarded-Proto   $scheme;
     }

     location /swagger/ {
         proxy_pass          http://localhost:5123; # tt-api
         proxy_set_header    Host                $http_host;
         proxy_set_header    X-Real-IP           $remote_addr;
         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
         proxy_set_header    X-Forwarded-Host    $host;
         proxy_set_header    X-Forwarded-Proto   $scheme;
         proxy_set_header    x-territory-tools-user   marcdurham@gmail.com;
         # ??? #  proxy_set_header        X-Forwarded-Server $host; # Not sure what this does...
     }

      # Primary (C# ASP.NET) Web Site with Login
      # The trailing slashes will ensure that /elastic/ are removed from the url while proxying the request. 
      # So, http://nginx_host/elastic/something will now go to http://localhost:5000/something
    #  location /api/ { # Note the trailing slash here
    #      proxy_pass          http://localhost:8088;  # Note the MISSING trailing slash here too, so the /api/ part is NOT removed from the uri
    #      proxy_set_header    Host                $http_host;
    #      proxy_set_header    X-Real-IP           $remote_addr;
    #      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    #      proxy_set_header    X-Forwarded-Host    $host;
    #      proxy_set_header    X-Forwarded-Proto   $scheme;
    #      proxy_set_header    x-territory-tools-user   marcdurham@gmail.com;
    #      # ??? #  proxy_set_header        X-Forwarded-Server $host; # Not sure what this does...
    #  }
 
     # Primary (C# ASP.NET) TerritoryTools.Web Site with Login
     rewrite ^/(Identity)(.*)$ /$1$2 last;
     location / {
         #proxy_pass          http://localhost:8088; # tt-web
         proxy_pass          http://localhost:5096; # tt-web2
         proxy_set_header    Host                $http_host;
         proxy_set_header    X-Real-IP           $remote_addr;
         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
         proxy_set_header    X-Forwarded-Host    $host;
         proxy_set_header    X-Forwarded-Proto   $scheme;
         #proxy_set_header    x-territory-tools-user   marcdurham@gmail.com;
         # ??? #  proxy_set_header        X-Forwarded-Server $host; # Not sure what this does...
     }
}
