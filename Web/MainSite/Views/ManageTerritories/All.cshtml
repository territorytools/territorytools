@using Microsoft.AspNetCore.Mvc.Localization
@model ManageTerritoriesAllPage;
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Title"].Value;
}

<h5 class="display-4 text-center">Territory List</h5>

<div class="container" style="max-width:1200px;">
    <div class="d-flex flex-column">
        <a class="p-2 m-2 btn btn-outline-secondary" asp-controller="Home" asp-action="Index">
            <i class="fas fa-arrow-left text-body"></i>Home
        </a>
    </div>
    @*<input type="text" id="area-filter" onkeyup="areaFilter()" placeholder="Search for areas" title="Type in a 3 letter area">
    <input type="text" id="people-filter" onkeyup="peopleFilter()" placeholder="Search for people" title="Type in a person's name'">*@
    <table id="territory-list-table"  class="table table-striped table-sm">
      <thead>
        <tr>
          <th scope="col" x-onclick="sortTable(0)" style="cursor:pointer;">#</th>
          <th scope="col" x-onclick="sortTable(1)" style="cursor:pointer;">Area</th>
          <th scope="col" x-onclick="sortTable(2)" style="cursor:pointer;">Description</th>
          <th scope="col" x-onclick="sortTable(3)" style="cursor:pointer;">Signed-out To</th>
          <th scope="col" x-onclick="sortTable(4)" style="cursor:pointer;">Signed-out Date</th>
          <th scope="col"></th>
        </tr>
      </thead>
      <tbody id="checked-out-to-section" onload="getCheckedOutTerritories()">
       
      </tbody>
    </table>
    <div id="status-message" onload="">Loading...</div>
    
</div>

@section scripts {
    <script type="text/javascript">
        //var userFullName = "Model.Name";

        document.addEventListener('DOMContentLoaded', (event) => {
            //loadAreas();
            getCheckedOutTerritories();
        });
        
        function getCheckedOutTerritories()
        {
            $('#status-message')
                .text('Loading...');
            $.ajax({
                type: 'GET',
                url: '/api/territories/all',
                dataType: 'json',
                processData: false,
                contentType: false,
                error: function (xhr, status) {
                    $('#checked-out-to-section')
                        .css('color', 'red')
                        .text(`Sorry there was an error loading your territories.  (${xhr.status} ${status} ${xhr.responseText})`);
                },
                success: function (data) {
                    $('#checked-out-to-section')
                            .text('');
                    data.forEach(function(item) {
                      const signedOut = new Date(item.signedOut);
                      const year = signedOut.getFullYear();
                      const month = (signedOut.getMonth() + 1).toString().padStart(2,"0");
                      const day = signedOut.getDate().toString().padStart(2,"0");
                      var signedOutString = `${year}-${month}-${day}`;
                      if(signedOut.getFullYear() == 1969) {
                          signedOutString = "";
                      }

                      var html = 
                        `
                        <tr>
                          <td scope="row">${item.number}</td>
                          <td>${item.areaCode}</td>
                          <td>${item.areaDescription}</td>
                          <td>${item.signedOutTo ?? ""}</td>
                          <td>${signedOutString}</td>
                          <td><a target="_blank" href="${item.assigneeMobileLink}">open</a></td>
                        </tr>
                       `
                          //<a class="btn btn-primary" target="_blank" href="${item.assigneeMobileLink}">Open</a></td>

                       $('#checked-out-to-section')
                            .append(html);
                       $('#status-message')
                            .text('');
                    });
                }
            });
        }

        function sortTable(n) {
          var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
          table = document.getElementById("territory-list-table");
          switching = true;
          //Set the sorting direction to ascending:
          dir = "asc"; 
          /*Make a loop that will continue until
          no switching has been done:*/
          while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
              //start by saying there should be no switching:
              shouldSwitch = false;
              /*Get the two elements you want to compare,
              one from current row and one from the next:*/
              x = rows[i].getElementsByTagName("TD")[n];
              y = rows[i + 1].getElementsByTagName("TD")[n];
              /*check if the two rows should switch place,
              based on the direction, asc or desc:*/
              if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch= true;
                  break;
                }
              } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch = true;
                  break;
                }
              }
            }
            if (shouldSwitch) {
              /*If a switch has been marked, make the switch
              and mark that a switch has been done:*/
              rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
              switching = true;
              //Each time a switch is done, increase this count by 1:
              switchcount ++;      
            } else {
              /*If no switching has been done AND the direction is "asc",
              set the direction to "desc" and run the while loop again.*/
              if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
              }
            }
          }
        }

        function areaFilter() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("area-filter");
          filter = input.value.toUpperCase();
          table = document.getElementById("territory-list-table");
          tr = table.getElementsByTagName("tr");
          for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1]; // 1: Area
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }       
          }
        }

        function peopleFilter() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("people-filter");
          filter = input.value.toUpperCase();
          table = document.getElementById("territory-list-table");
          tr = table.getElementsByTagName("tr");
          for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[3]; // 3: Signed out to
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }       
          }
        }
    </script>
}