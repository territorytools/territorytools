@using Microsoft.AspNetCore.Mvc.Localization
@model ManageTerritoriesAllPage;
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Territory List";
    //ViewData["Title"] = Localizer["Title"].Value;
}

<h5 class="display-4 text-center">Territory List</h5>

<div class="container" style="max-width:1200px;">
    <div class="d-flex flex-column">
        <a class="p-2 m-2 btn btn-outline-secondary" asp-controller="Home" asp-action="Index">
            <i class="fas fa-arrow-left text-body"></i>Home
        </a>
    </div>
    @*<input type="text" id="area-filter" onkeyup="areaFilter()" placeholder="Search for areas" title="Type in a 3 letter area">
    <input type="text" id="people-filter" onkeyup="peopleFilter()" placeholder="Search for people" title="Type in a person's name'">*@
    <table id="territory-list-table"  class="table table-striped table-sm">
      <thead>
        <tr>
          <th scope="col" x-onclick="sortTable(0)" style="cursor:pointer;">#</th>
          <th scope="col" x-onclick="sortTable(1)" style="cursor:pointer;">Area</th>
          <th scope="col" x-onclick="sortTable(2)" style="cursor:pointer;">Description</th>
          <th scope="col" x-onclick="sortTable(3)" style="cursor:pointer;">Signed-out To</th>
@*          <th scope="col" x-onclick="sortTable(4)" style="cursor:pointer;">Signed-out Date</th>
          <th scope="col"></th>*@
        </tr>
      </thead>
      <tbody id="checked-out-to-section" onload="getCheckedOutTerritories()">
       
      </tbody>
    </table>
    <div id="status-message" onload="">Loading...</div>


    
</div>

  <!-- The Modal -->
  <div class="modal fade" id="myModal">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
      
        <!-- Modal Header -->
        <div class="modal-header">
          <h5 class="modal-title">Territory 
              <span id="modal-header-number"></span> 
              <span id="modal-header-area-description"></span>
              <span id="modal-header-area-code"></span>
          </h5>
          
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="m-3"><h4 id="modal-header-big">Assignment</h4></div>
        <!-- Modal body -->
        <div class="modal-body">

            <div id="edit-form" style="display:none;">
            <form action="/action_page.php">
              <div class="form-group">
                <label for="modal-number">Number:</label>
                <input name="number" type="text" class="form-control" placeholder="Territory number" id="modal-number" value="1">
              </div>
              <div class="form-group">
                <label for="modal-area-code">Area:</label>
                <input name="areaCode" type="text" class="form-control" placeholder="Enter 3-character area" id="modal-area-code">
              </div>
              <div class="form-group">
                <label for="pwd">Description:</label>
                <input name="areaDescription" type="text" class="form-control" placeholder="Enter description" id="modal-area-description">
              </div>
             
              <button type="button" class="btn btn-primary" data-dismiss="modal">Save</button>
            </form>
            </div>

            <div id="assignment-buttons">
              <form action="/action_page.php">
                  <div class="form-group">
                    <label for="modal-number">Current Assignee:</label>
                    <div class="input-group-append">
                    <input name="assignee" type="text" class="form-control" placeholder="Nobody assigned" id="modal-current-assignee" readonly>
                    <button id="unassign-button" type="submit" class="btn btn-primary">Unassign</button>
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="user-menu">New Assignee:</label>
                    <div class="input-group-append">
                        <select id="user-menu" name="albaUserId" class="custom-select"></select>
                        <button type="submit" class="btn btn-primary">Assign</button>
                    </div>
                  </div>
              </form>
            </div>
          
        </div>
        
        <!-- Modal footer -->
        <div class="modal-footer">
         @* <button class="btn btn-secondary active" data-toggle="tab" href="#home">Home</button>
          <button class="btn btn-secondary" data-toggle="tab" href="#menu1">Menu 1</button>
          <button class="btn btn-secondary" data-toggle="tab" href="#menu2">Menu 2</button>*@
          <button id="view-territory-button" type="button" class="btn btn-primary">View</button>
          <button id="edit-territory-button" type="button" class="btn btn-primary">Edit</button>
          <button id="territory-assignment-button" type="button" class="btn btn-outline-primary">Assignment</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          
        </div>
        
      </div>
    </div>
  </div>

  


@section scripts {
    <script type="text/javascript">
        //var userFullName = "Model.Name";

        document.addEventListener('DOMContentLoaded', (event) => {
            loadUsers();
            getCheckedOutTerritories();
        });
        
        function getCheckedOutTerritories()
        {
            $('#status-message')
                .text('Loading...');
            $.ajax({
                type: 'GET',
                url: '/api/territories/all',
                dataType: 'json',
                processData: false,
                contentType: false,
                error: function (xhr, status) {
                    $('#checked-out-to-section')
                        .css('color', 'red')
                        .text(`Sorry there was an error loading your territories.  (${xhr.status} ${status} ${xhr.responseText})`);
                },
                success: function (data) {
                    $('#checked-out-to-section')
                            .text('');
                    data.forEach(function(item) {
                      const signedOut = new Date(item.signedOut);
                      const year = signedOut.getFullYear();
                      const month = (signedOut.getMonth() + 1).toString().padStart(2,"0");
                      const day = signedOut.getDate().toString().padStart(2,"0");
                      var signedOutString = `${year}-${month}-${day}`;
                      if(signedOut.getFullYear() == 1969) {
                          signedOutString = "";
                      }

                      var html = 
                        `
                        <tr class="openSingleTerritoryManage"
                            style="cursor:pointer;"
                            data-number="${item.number}" 
                            data-area-code="${item.areaCode}"
                            data-area-description="${item.areaDescription}"
                            data-signed-out-to="${item.signedOutTo}"
                            data-signed-out="${item.signedOutString}"
                            data-toggle="modal" data-target="#myModal">
                      
                          <td scope="row">
                            ${item.number}
                          </td>
                          <td>${item.areaCode}</td>
                          <td>${item.areaDescription}</td>
                          <td>${item.signedOutTo ?? ""}</td>
                          <!-- td>${signedOutString}</td -->
                          <!-- td><a target="_blank" href="${item.assigneeMobileLink}">open</a></td -->
                        </tr>
                          
                       `
                          //<a class="btn btn-primary" target="_blank" href="${item.assigneeMobileLink}">Open</a></td>

                       $('#checked-out-to-section')
                            .append(html);
                       $('#status-message')
                            .text('');
                    });
                }
            });
        }

        $(document).on("click", ".openSingleTerritoryManage", function () {
            console.log("open single territory manage clicked");
            var territoryId = $(this).data('id');
            console.log("  id clicked" + territoryId);
             $("#modal-header-number").text( $(this).data('number') );
             $("#modal-header-area-code").text( $(this).data('area-code') );
             $("#modal-header-area-description").text( $(this).data('area-description') );
             $("#modal-number").val( $(this).data('number') );
             $("#modal-area-code").val( $(this).data('area-code') );
             $("#modal-area-description").val($(this).data('area-description'));
             $("#modal-current-assignee").val($(this).data('signed-out-to'));

             if(!$(this).data('signed-out-to')) {
                 $("#unassign-button").attr('disabled','');
             } else {
                 $("#unassign-button").removeAttr('disabled');
             }
             // As pointed out in comments, 
             // it is unnecessary to have to manually call the modal.
             // $('#addBookDialog').modal('show');
        });

        $(document).on("click", ".openEditTerritory", function () {
            console.log("edit single territory manage clicked");
             $("#edit-modal-header-number").text( $("#modal-header-number").val() );
             $("#edit-modal-header-area-code").text(  $("#modal-header-area-code").val() );
             $("#edit-modal-header-area-description").text( $(this).data('area-description') );

             
             //$("#modal-number").val( $(this).data('number') );
             //$("#modal-area-code").val( $(this).data('area-code') );
             //$("#modal-area-description").val($(this).data('area-description'));
             // As pointed out in comments, 
             // it is unnecessary to have to manually call the modal.
             // $('#addBookDialog').modal('show');
        });

        
        $(document).on("click", "#edit-territory-button", function () {
            $("#modal-header-big").text("Edit");
            var ef = document.getElementById("edit-form");
            //var efb = document.getElementById("edit-territory-button");
            var ab = document.getElementById("assignment-buttons");
            //var abb = document.getElementById("territory-assignment-button");
             
            ab.style.display = "none";
            ef.style.display = "block";
            //abb.className = "btn btn-primary";
            $("#territory-assignment-button").removeClass('btn-outline-primary');
            $("#territory-assignment-button").addClass('btn-primary');
            $("#edit-territory-button").removeClass('btn-primary');
            $("#edit-territory-button").addClass('btn-outline-primary');
            //efb.className = "btn btn-outline-primary";
        });

         $(document).on("click", "#territory-assignment-button", function () {
            $("#modal-header-big").text("Assignment");
            var ef = document.getElementById("edit-form");
            //var efb = document.getElementById("edit-territory-button");
            var ab = document.getElementById("assignment-buttons");
            //var abb = document.getElementById("territory-assignment-button");
             
            ab.style.display = "block";
            ef.style.display = "none";
            //abb.className = "btn btn-outline-primary";
            //efb.className = "btn btn-primary";
            $("#territory-assignment-button").removeClass('btn-primary');
            $("#territory-assignment-button").addClass('btn-outline-primary');
            $("#edit-territory-button").removeClass('btn-outline-primary');
            $("#edit-territory-button").addClass('btn-primary');
        });

        function sortTable(n) {
          var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
          table = document.getElementById("territory-list-table");
          switching = true;
          //Set the sorting direction to ascending:
          dir = "asc"; 
          /*Make a loop that will continue until
          no switching has been done:*/
          while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
              //start by saying there should be no switching:
              shouldSwitch = false;
              /*Get the two elements you want to compare,
              one from current row and one from the next:*/
              x = rows[i].getElementsByTagName("TD")[n];
              y = rows[i + 1].getElementsByTagName("TD")[n];
              /*check if the two rows should switch place,
              based on the direction, asc or desc:*/
              if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch= true;
                  break;
                }
              } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch = true;
                  break;
                }
              }
            }
            if (shouldSwitch) {
              /*If a switch has been marked, make the switch
              and mark that a switch has been done:*/
              rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
              switching = true;
              //Each time a switch is done, increase this count by 1:
              switchcount ++;      
            } else {
              /*If no switching has been done AND the direction is "asc",
              set the direction to "desc" and run the while loop again.*/
              if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
              }
            }
          }
        }

        function areaFilter() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("area-filter");
          filter = input.value.toUpperCase();
          table = document.getElementById("territory-list-table");
          tr = table.getElementsByTagName("tr");
          for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1]; // 1: Area
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }       
          }
        }

        function peopleFilter() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("people-filter");
          filter = input.value.toUpperCase();
          table = document.getElementById("territory-list-table");
          tr = table.getElementsByTagName("tr");
          for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[3]; // 3: Signed out to
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }       
          }
        }
        
        function loadUsers()
        {
            $('#user-menu').html('<option value="0">Loading...</option>');
            $.ajax({
                type: 'GET',
                url: '/api/users?active=true',
                dataType: 'json',
                processData: false,
                contentType: false,
                error: function (xhr, status) {
                    $('#user-menu')
                        .css('color', 'red')
                        .text(`Sorry there was an error loading users.  (${xhr.status} ${status} ${xhr.responseText})`);
                },
                success: function (data) {
                    $('#user-menu').html('<option value="0">Select a user</option>');
                    data.forEach(function(item) {
                      const html = `<option value="${item.albaUserId}">${item.albaFullName}</option>`;

                       $('#user-menu').append(html);
                    });
                }
            });
        }
        
    </script>
}
